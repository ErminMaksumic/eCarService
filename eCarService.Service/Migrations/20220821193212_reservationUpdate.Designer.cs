// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCarService.Database;

#nullable disable

namespace eCarService.Service.Migrations
{
    [DbContext(typeof(eCarServiceContext))]
    [Migration("20220821193212_reservationUpdate")]
    partial class reservationUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("eCarService.Database.AdditionalService", b =>
                {
                    b.Property<int>("AdditionalServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdditionalServiceId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,1)");

                    b.HasKey("AdditionalServiceId");

                    b.ToTable("AdditionalServices");
                });

            modelBuilder.Entity("eCarService.Database.CarBrand", b =>
                {
                    b.Property<int>("CarBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarBrandId"), 1L, 1);

                    b.Property<int?>("CarServiceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CarBrandId");

                    b.HasIndex("CarServiceId");

                    b.ToTable("CarBrands");
                });

            modelBuilder.Entity("eCarService.Database.CarBrandOffer", b =>
                {
                    b.Property<int>("CarBrandOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarBrandOfferId"), 1L, 1);

                    b.Property<int?>("CarBrandId")
                        .HasColumnType("int");

                    b.Property<int?>("OfferId")
                        .HasColumnType("int");

                    b.HasKey("CarBrandOfferId");

                    b.HasIndex("CarBrandId");

                    b.HasIndex("OfferId");

                    b.ToTable("CarBrandOffer", (string)null);
                });

            modelBuilder.Entity("eCarService.Database.CarService", b =>
                {
                    b.Property<int>("CarServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarServiceId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CarServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("CarServices");
                });

            modelBuilder.Entity("eCarService.Database.CustomOfferRequest", b =>
                {
                    b.Property<int>("CustomReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomReqId"), 1L, 1);

                    b.Property<int?>("CarServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Status")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CustomReqId")
                        .HasName("PK_2");

                    b.HasIndex("CarServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("CustomOfferRequest", (string)null);
                });

            modelBuilder.Entity("eCarService.Database.Offer", b =>
                {
                    b.Property<int>("OfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfferId"), 1L, 1);

                    b.Property<int?>("CarServiceId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,1)");

                    b.Property<string>("Status")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("OfferId");

                    b.HasIndex("CarServiceId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("eCarService.Database.OfferPart", b =>
                {
                    b.Property<int>("OfferPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfferPartId"), 1L, 1);

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.HasKey("OfferPartId");

                    b.HasIndex("OfferId");

                    b.HasIndex("PartId");

                    b.ToTable("OfferParts");
                });

            modelBuilder.Entity("eCarService.Database.Part", b =>
                {
                    b.Property<int>("PartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartId"), 1L, 1);

                    b.Property<int?>("CarServiceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PartId");

                    b.HasIndex("CarServiceId");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("eCarService.Database.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,1)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("eCarService.Database.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.HasIndex("OfferId");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("eCarService.Database.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"), 1L, 1);

                    b.Property<int?>("CarBrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OfferId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("CarBrandId");

                    b.HasIndex("OfferId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("eCarService.Database.ReservationsAdditionalService", b =>
                {
                    b.Property<int>("ResAddServicesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResAddServicesId"), 1L, 1);

                    b.Property<int>("AdditionalServiceId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("ResAddServicesId")
                        .HasName("PK_13");

                    b.HasIndex("AdditionalServiceId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationsAdditionalServices");
                });

            modelBuilder.Entity("eCarService.Database.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("eCarService.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("eCarService.Database.CarBrand", b =>
                {
                    b.HasOne("eCarService.Database.CarService", "CarService")
                        .WithMany("CarBrands")
                        .HasForeignKey("CarServiceId")
                        .HasConstraintName("FK_REFERENCE_24");

                    b.Navigation("CarService");
                });

            modelBuilder.Entity("eCarService.Database.CarBrandOffer", b =>
                {
                    b.HasOne("eCarService.Database.CarBrand", "CarBrand")
                        .WithMany("CarBrandOffers")
                        .HasForeignKey("CarBrandId")
                        .HasConstraintName("FK_REFERENCE_22");

                    b.HasOne("eCarService.Database.Offer", "Offer")
                        .WithMany("CarBrandOffers")
                        .HasForeignKey("OfferId")
                        .HasConstraintName("FK_REFERENCE_23");

                    b.Navigation("CarBrand");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("eCarService.Database.CarService", b =>
                {
                    b.HasOne("eCarService.Database.User", "User")
                        .WithMany("CarServices")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_REFERENCE_21");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eCarService.Database.CustomOfferRequest", b =>
                {
                    b.HasOne("eCarService.Database.CarService", "CarService")
                        .WithMany("CustomOfferRequests")
                        .HasForeignKey("CarServiceId")
                        .HasConstraintName("FK_REFERENCE_29");

                    b.HasOne("eCarService.Database.User", "User")
                        .WithMany("CustomOfferRequests")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_REFERENCE_28");

                    b.Navigation("CarService");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eCarService.Database.Offer", b =>
                {
                    b.HasOne("eCarService.Database.CarService", "CarService")
                        .WithMany("Offers")
                        .HasForeignKey("CarServiceId")
                        .HasConstraintName("FK_REFERENCE_6");

                    b.Navigation("CarService");
                });

            modelBuilder.Entity("eCarService.Database.OfferPart", b =>
                {
                    b.HasOne("eCarService.Database.Offer", "Offer")
                        .WithMany("OfferParts")
                        .HasForeignKey("OfferId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_25");

                    b.HasOne("eCarService.Database.Part", "Part")
                        .WithMany("OfferParts")
                        .HasForeignKey("PartId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_26");

                    b.Navigation("Offer");

                    b.Navigation("Part");
                });

            modelBuilder.Entity("eCarService.Database.Part", b =>
                {
                    b.HasOne("eCarService.Database.CarService", "CarService")
                        .WithMany("Parts")
                        .HasForeignKey("CarServiceId")
                        .HasConstraintName("FK_REFERENCE_17");

                    b.Navigation("CarService");
                });

            modelBuilder.Entity("eCarService.Database.Rating", b =>
                {
                    b.HasOne("eCarService.Database.Offer", "Offer")
                        .WithMany("Ratings")
                        .HasForeignKey("OfferId")
                        .HasConstraintName("FK_REFERENCE_15");

                    b.HasOne("eCarService.Database.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_REFERENCE_16");

                    b.Navigation("Offer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eCarService.Database.Reservation", b =>
                {
                    b.HasOne("eCarService.Database.CarBrand", "CarBrand")
                        .WithMany("Reservations")
                        .HasForeignKey("CarBrandId")
                        .HasConstraintName("FK_REFERENCE_30");

                    b.HasOne("eCarService.Database.Offer", "Offer")
                        .WithMany("Reservations")
                        .HasForeignKey("OfferId")
                        .HasConstraintName("FK_REFERENCE_14");

                    b.HasOne("eCarService.Database.Payment", "Payment")
                        .WithMany("Reservations")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("FK_REFERENCE_27");

                    b.HasOne("eCarService.Database.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_REFERENCE_5");

                    b.Navigation("CarBrand");

                    b.Navigation("Offer");

                    b.Navigation("Payment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eCarService.Database.ReservationsAdditionalService", b =>
                {
                    b.HasOne("eCarService.Database.AdditionalService", "AdditionalService")
                        .WithMany("ReservationsAdditionalServices")
                        .HasForeignKey("AdditionalServiceId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_20");

                    b.HasOne("eCarService.Database.Reservation", "Reservation")
                        .WithMany("ReservationsAdditionalServices")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FK_REFERENCE_19");

                    b.Navigation("AdditionalService");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("eCarService.Database.User", b =>
                {
                    b.HasOne("eCarService.Database.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_REFERENCE_18");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("eCarService.Database.AdditionalService", b =>
                {
                    b.Navigation("ReservationsAdditionalServices");
                });

            modelBuilder.Entity("eCarService.Database.CarBrand", b =>
                {
                    b.Navigation("CarBrandOffers");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("eCarService.Database.CarService", b =>
                {
                    b.Navigation("CarBrands");

                    b.Navigation("CustomOfferRequests");

                    b.Navigation("Offers");

                    b.Navigation("Parts");
                });

            modelBuilder.Entity("eCarService.Database.Offer", b =>
                {
                    b.Navigation("CarBrandOffers");

                    b.Navigation("OfferParts");

                    b.Navigation("Ratings");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("eCarService.Database.Part", b =>
                {
                    b.Navigation("OfferParts");
                });

            modelBuilder.Entity("eCarService.Database.Payment", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("eCarService.Database.Reservation", b =>
                {
                    b.Navigation("ReservationsAdditionalServices");
                });

            modelBuilder.Entity("eCarService.Database.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("eCarService.Database.User", b =>
                {
                    b.Navigation("CarServices");

                    b.Navigation("CustomOfferRequests");

                    b.Navigation("Ratings");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
